#!/bin/bash

function status() {
  if [ -f $PID ] && ( kill -0 $(cat $PID) ); then
    client_result "JRuby is running"
  else
    client_result "JRuby is not running"
  fi
}

function start() {
  echo "Start JRuby"
  ${OPENSHIFT_REPO_DIR}.openshift/action_hooks/start
  return 0
}

function stop() {
  echo "Stop function"

  if [ -f $OPENSHIFT_JRUBY_PID ]; then
    kill -s SIGTERM $(cat $OPENSHIFT_JRUBY_PID)
    rm $OPENSHIFT_JRUBY_PID
  fi

  return 0
}

function build() {
  echo "Run Bundler"
  bundle="${OPENSHIFT_REPO_DIR}.openshift/action_hooks/bundle"
  if [ -f $bundle ];then
    $bundle
  fi
  return 0
}

function post-deploy() {
  echo "Post-deploy JRuby"
}

function pre-build() {
  echo "Pre-build JRuby"
}

function tidy() {
  echo "Tidy JRuby"
}

# Wrappers

function restart() {
  stop
  start
}

function update() {
  echo "Updating JRuby."

  if [ "$OPENSHIFT_JRUBY_VERSION" == "" ];then
    OPENSHIFT_JRUBY_VERSION=`curl -L -H "Pragma: no-cache, must-revalidate" -H "Cache-Control: no-cache, must revalidate" http://jruby.org/download | ruby -e "s=ARGF.read;x=/JRuby (1\.7\.\d+) is our current installment of the JRuby 1.x series./m.match(s);puts x[1]"`
  fi

  mkdir -p ${OPENSHIFT_JRUBY_DIR}versions

  cd ${OPENSHIFT_JRUBY_DIR}versions

  curl -o jruby.tar.gz http://jruby.org.s3.amazonaws.com/downloads/$OPENSHIFT_JRUBY_VERSION/jruby-bin-$OPENSHIFT_JRUBY_VERSION.tar.gz

  tar xf jruby.tar.gz
  rm -rf jruby.tar.gz

  mv jruby-$OPENSHIFT_JRUBY_VERSION $OPENSHIFT_JRUBY_VERSION

  echo "$OPENSHIFT_JRUBY_VERSION" > ${OPENSHIFT_JRUBY_DIR}env/OPENSHIFT_JRUBY_VERSION

  export PATH="${OPENSHIFT_JRUBY_DIR}versions/${OPENSHIFT_JRUBY_VERSION}/bin:$PATH"
  export GEM_HOME=${OPENSHIFT_JRUBY_DIR}gems
  export GEM_PATH=${OPENSHIFT_JRUBY_DIR}gems

  mkdir -p $GEM_PATH
  
  jruby -S gem install puma bundler sinatra > ${OPENSHIFT_JRUBY_DIR}log/bundler.log
}

# Validate input

if ! [ $# -gt 0 ]; then
  echo "Usage: $0 [start|restart|graceful|graceful-stop|stop|status|update]"
  exit 1
fi

# Handle commands.

case "$1" in
  start)               start       ;;
  restart|graceful)    restart     ;;
  graceful-stop|stop)  stop        ;;
  status)              status      ;;
  build)               build       ;;
  pre-build)           pre-build   ;;
  post-deploy)         post-deploy ;;
  tidy)                tidy        ;;
  update)              update      ;;
  *)
esac
